Extracting pipeline                                                             
                                                                                
[2023-05-08 14:51:12] Logs: 'output/log/valet-20230508-145112.log'
Extracting pipeline                                                             
[2023-05-08 14:51:14] Unable to parse Jenkins pipeline.
                      Pipeline type: flow-definition
                      Message: Unable to parse jenkinsfile: Invalid agent type "docker" specified. Must be one of [any, label, none] @ line 29, column 9.
                      Invalid agent type "docker" specified. Must be one of [any, label, none] @ line 64, column 13.

name: config-folders/mavenDocker_config
on:
  workflow_dispatch:
env:
#   # This item has no matching transformer
#   IMAGE: "${readMavenPom().getArtifactId()}"
#   # This item has no matching transformer
#   VERSION: "${readMavenPom().getVersion()}"
env:
  IMAGE: ${{ steps.read-pom.outputs.artifact_id }}
  VERSION: ${{ steps.read-pom.outputs.version }}
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
    - name: Set up JDK 1.11
      uses: actions/setup-java@v3.11.0
      with:
        distribution: zulu
        java-version: '1.11'
        settings-path: "${{ github.workspace }}"
    - name: sh
      shell: bash
      run: mvn clean findbugs:findbugs package
    - name: snapshot post build job status
      run: echo "success=${{ job.status == 'success' }}" >> $GITHUB_OUTPUT
      id: __post_build
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3.1.1
      if: steps.__post_build.outputs.success == 'true'
      with:
        if-no-files-found: ignore
        path: "**/target/*.jar"
  Quality_Analysis_Integration_Test:
    name: Quality Analysis-Integration Test
    runs-on: ubuntu-latest
    needs: Build
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
    - name: echo message
      run: echo Run integration tests here...
  Quality_Analysis_Sonar_Scan:
    name: Quality Analysis-Sonar Scan
    runs-on: ubuntu-latest
#    env:
#       # This item has no matching transformer
#       SONAR:
      - name: SonarQube Analysis
        if: success()
        uses: sonarsource/sonarqube-scan-action@v1.2
        env:
          SONAR_LOGIN: ${{ secrets.SONAR_TOKEN }}


    needs: Build
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
    - name: sh
      shell: bash
      run: mvn sonar:sonar -Dsonar.login=$SONAR_PSW
  Build_and_Publish_Image:
    if: github.ref == 'refs/heads/master'
    name: Build and Publish Image
    runs-on: ubuntu-latest
    needs:
    - Quality_Analysis_Integration_Test
    - Quality_Analysis_Sonar_Scan
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
    - name: sh
      shell: bash
      run: |-
        """
                  docker build -t ${{ env.IMAGE }} .
                  docker tag ${{ env.IMAGE }} ${{ env.IMAGE }}:${{ env.VERSION }}
                  docker push ${{ env.IMAGE }}:${{ env.VERSION }}
                """
  Post-Build:
    if: always()
    name: Post Build
    runs-on: ubuntu-latest
    needs:
    - Build
    - Quality_Analysis_Integration_Test
    - Quality_Analysis_Sonar_Scan
    - Build_and_Publish_Image
    steps:
    - name: snapshot post build workflow status
      run: echo "failure=${{ contains(needs.*.result,'failure') && !contains(needs.*.result,'cancelled') }}" >> $GITHUB_OUTPUT
      id: __post_build
#     # Mail was not converted because the behavior is available by default in GitHub Actions and/or it is not configurable    
    - name: Notify on Failure
      if: ${{ failure() }}
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "Failed Workflow: ${{ github.workflow }} (${{ github.sha }})"
        body: "Something is wrong with ${{ github.run_number }}. Check the logs at ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        to: team@example.com
        from: your-email@example.com
        tls: true
                  